# Travis-CI for Golang projects
# Runs the tests, builds the distribution artifacts, uploads them to S3, and produces a
# code coverage report. The upload is segregated by branch name, so each branch gets its own
# uploaded version. (Note: nothing is automatically garbage collected.)
language: go
go:
  - 1.4
env:
  global:
    # GITHUB_TOKEN= to push code coverage comment to github
  - secure: "P4dMvODDHECTISE773J1iU2zgUP09qolyiIAW0nBIpRdd+ZVeF78nlc+nR1seIN/LtihJfBFqi7c+Ges2/ulgTT44OBfjUMMDW28hEacTo0kFBfK9c1eTdfLgYkPY084/J23SnQ06ZK+PJ5t9scnYtF6KTenF226AZE/gibZX1/C8CpuWAF98b+Su2TmERZSal2p4IZI3udyCyboY6TqH3UyyF6ZFG61dAoq8g88daqfxyQ5Wj4zBWIEDIvYiZ0HUmLRJUXsDxDj2pU+TCuBScpRzKmw891IlUpNKOEghMp5KhoWCakUx03/CcoyZ6aNXM22pKY15ceCcFBNbX0ts8otWSTBhRl/CHd6Ef4TRjQSCSnjsyNf/P6gElhrKItQc5qIV63BlguEet6wANiIVyvJaHIknyspsi88T2mXH0blW9Rz2UBsBzUE13lTias2HV+zQXmifpvEdnuXm/KuA8Jj1CYsGCCEN/jzORkndCMxQAHHa+UXYOL3kw8SOHCRLYQMxUH3KH6vdw86BqpleV+5dUQlm3mOZGwyr28p6E9TI9qaZjz7mcf6axXRxaRxc010txv4IXi6znd2swn5kd/6y2c2QDUDwRk3X5Rr+VEjigqfAVfZWiowb4XOTJ4X5lrO2lI7hPY4uVrxMj7g6CYK78xkjY9vAptms+I4eqk="
    # COV_KEY= code coverage upload keys
  - secure: "Y8zcQSMui857VDKPz87CSCdO1hMoTypp/UHj1v2v7jwJa40SkopqC2WjKFjxOqYlnUhWdoTfpReAXPLvsGDUOLUDfdRakLl1DTdTSnt0aNq6ZwMehNH7w7X1hyGC0w/V/7J/gplAXiebh4/Et5geM7u4VWXfmf3wOxeBKlrZ7VK6U5ahQnE7VubMOTHabAu7tMwx0T+Zvn0FKIVWlPyVvpR6lSW4uymyHoik9l+kdO6Y09smwAP8qxmYLavQF0PcP3JFwvgTFtiYSm+H1sZmGoHO2VnSoFgKCqffmXNs10t60/IMgqgD1UHEsf7ecBIiTZDTdg1Cz/o1LFHsQ+BzOM1AnjyC3Z28Doqbp9IMkVBbSVQXpwWMVVcLjGCAfaX8K4Y6+plABTGlBZNxbpmsLQypBS8S2JD0mgsHSdBn07zt1CtPjtBZmMdLJVoN0Fie8AoQTIZIJyWgu+Oy6oigiLg4v4HRx8ZyM/d72+FD8OsPX1n9Pc20Sl1QN+fuHz6KOZfMB2GgdN9IiWV799xIfe2JSeiGHErR16rCRFRD5eYvQRG6M4drahcZV7t/a9kXYbV8IWNqwy3nJEpbqhp6z54aSF3Eny8hCDiUeu5cpZz6FKTaKr4Y7ClJYI+kGRMAyDeYByUNHec/Tw1xM2TvHCdYmUc2kE4yvKx/Hp20UUI="

# sudo=false makes the build run using a container
sudo: false

# I'm putting as many tasks as possible into the Makefile, hence the make depend...
install:
  - export PATH=$PATH:$HOME/gopath/bin # travis' worker doesn't seem to do this consistently
  - make depend

before_script: make

# Everything else in here, we don't put the uploads into an after_success section because
# that can cause the build to succeed even if the artifacts are not actually uploaded
script:
  - export NAME=`basename $TRAVIS_BUILD_DIR`
  - make travis-test
  - export PATH=./Godeps/_workspace/bin:$PATH
  - ls Godeps/_workspace/bin
  - echo $PATH
  - which gof3r
  # Compute code coverage
  - go tool cover -func=$NAME.coverprofile > coverage.txt
  - export COVERAGE=$(grep "^total:" coverage.txt | grep -o "[0-9\.]*")
  - echo "Code Coverage is ${COVERAGE}%"
  - export BUILD=${TRAVIS_BUILD_NUMBER}
  - if [[ "${TRAVIS_PULL_REQUEST}" != "false" ]]; then let BUILD=BUILD-1; fi
  - export FILENAME="$(date +%Y-%m-%d)_${BUILD}_Coverage-${COVERAGE}.txt"
  - mv coverage.txt $FILENAME
  # Post code coverage comment to github
  - export CODCOV_URL="https://s3.amazonaws.com/rs-code-coverage/${NAME}/${FILENAME}"
  - export JSON_COMMENT="{\"body\":\"Code Coverage is ${COVERAGE}%, details at $CODCOV_URL
    (sometimes the URL can take a few minutes to be available)\"}"
  - |
    if [[ "${TRAVIS_PULL_REQUEST}" != "false" ]]; then
      curl -XPOST -s -H "Authorization: token ${GITHUB_TOKEN}" \
           -H "Content-Type: application/json" -d "${JSON_COMMENT}" \
           "https://api.github.com/repos/rightscale/${NAME}/issues/${TRAVIS_PULL_REQUEST}/comments"
    fi
  # Deploy code coverage result to S3
  - export AWS_ACCESS_KEY_ID=AKIAI4RIGBPD3NP2RQ3Q # code coverage bucket access
  - export AWS_SECRET_ACCESS_KEY=${COV_KEY}
  - gof3r put -b rs-code-coverage -k ${NAME}/${FILENAME} -m x-amz-acl:public-read < ${FILENAME}
  # Deploy code coverage badge to S3
  - export COVERAGE_INT=$(echo $COVERAGE | cut -d. -f1)
  - export BADGE_FILENAME=cc_badge_${TRAVIS_BRANCH}.svg
  - export BADGE_COLOR=$( if [ ${COVERAGE_INT} -gt 80 ] ; then echo brightgreen ; elif [ ${COVERAGE_INT} -gt 40 ] ; then echo yellow ; else echo red ; fi )
  - wget "http://img.shields.io/badge/coverage-${COVERAGE}%25-${BADGE_COLOR}.svg" -O ${BADGE_FILENAME}
  - gof3r put -b rs-code-coverage -k ${NAME}/${BADGE_FILENAME} -m x-amz-acl:public-read -m cache-control:no-cache -m content-type:image/svg+xml < ${BADGE_FILENAME}
